{"version":3,"sources":["reminder-sound.mp3","App.js","index.js"],"names":["App","useState","name","setName","time","setTime","error","userError","reminder","reminderName","btn","buttonDisabled","initialReminder","setReminder","Audio","audio","sound","className","type","placeholder","width","onInput","e","target","value","onClick","lastTime","length","reminderFunction","refreshIntervalId","setInterval","clearInterval","play","startReminder","disabled","pause","ReactDOM","render","document","getElementById"],"mappings":"mKAAe,MAA0B,2C,OCG1B,SAASA,IAAO,IAAD,EACFC,mBAAS,IADP,mBACnBC,EADmB,KACbC,EADa,OAEFF,mBAAS,IAFP,mBAEnBG,EAFmB,KAEbC,EAFa,OAGCJ,mBAAS,IAHV,mBAGnBK,EAHmB,KAGZC,EAHY,OAION,mBAAS,MAJhB,mBAInBO,EAJmB,KAITC,EAJS,OAKIR,oBAAS,GALb,mBAKnBS,EALmB,KAKdC,EALc,OAMaV,oBAAS,GANtB,mBAMnBW,EANmB,KAMFC,EANE,OAOVZ,mBAAS,IAAIa,MAAMC,IAA5BC,EAPmB,oBAqD1B,OACI,gCACI,kDACA,sBAAKC,UAAU,eAAf,UACI,sBAAKA,UAAU,SAAf,UACI,+BAAM,uBAAOC,KAAK,OAAOC,YAAY,sBAAsBC,MAAM,MAAMH,UAAU,WAAWI,QAAS,SAAAC,GAAC,OAAInB,EAAQmB,EAAEC,OAAOC,QAAQA,MAAOtB,MAC1I,+BAAM,uBAAOgB,KAAK,SAASC,YAAY,wBAAwBC,MAAM,MAAMH,UAAU,OAAOI,QAAS,SAAAC,GAAC,OAAIjB,EAAQiB,EAAEC,OAAOC,QAAQA,MAAOpB,SAE9I,mBAAGa,UAAU,QAAb,SAAsBX,IACtB,wBAAQW,UAAU,gBAAgBC,KAAK,SAASO,QAAS,kBArD/C,WAClB,IAAwB,IAApBb,EAAJ,CAIA,IAAIc,EAAWtB,EACf,GAAa,KAATF,EAGG,GAAa,KAATE,EAGJ,GAAIF,EAAKyB,OAAS,IACrBpB,EAAU,8DAEP,GAAIH,EAAO,KACdG,EAAU,uDADP,CAIPI,GAAe,GACfJ,EAAU,IAYVqB,IACA,IAAMC,EAAoBC,aAAY,WAClCF,MACD,UAzBCrB,EAAU,gDAHVA,EAAU,gDALVA,EAAU,kBAmBd,SAASqB,IACY,IAAbF,GACAjB,EAAa,yBAAD,OAA0BP,EAA1B,sBAA4CwB,IACxDA,MAEAjB,EAAa,gCAAD,OAAiCP,EAAjC,OACZ6B,cAAcF,GACdb,EAAMgB,QAEVnB,GAAY,IAuBuDoB,IAAiBC,SAAUxB,EAA1F,4BACA,wBAAQO,UAAU,gBAAgBC,KAAK,SAASO,QAAS,kBAhBjEd,GAAe,GACfF,EAAa,IACbF,EAAU,yCACVM,GAAY,QACZG,EAAMmB,SAYE,wBACA,qBAAKlB,UAAU,eAAf,SACI,mBAAGA,UAAU,gBAAb,SAA8BT,Y,MC/DlD4B,IAASC,OACL,cAACrC,EAAD,IACAsC,SAASC,eAAe,W","file":"static/js/main.1f6f7014.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/reminder-sound.10543fa3.mp3\";","import React, { useState } from \"react\"\r\nimport audio from './reminder-sound.mp3'\r\n\r\nexport default function App() {\r\n    const [name, setName] = useState(\"\")\r\n    const [time, setTime] = useState(\"\")\r\n    const [error, userError] = useState(\"\")\r\n    const [reminder, reminderName] = useState(null)\r\n    const [btn, buttonDisabled] = useState(false)\r\n    const [initialReminder, setReminder] = useState(true)\r\n    const [sound] = useState(new Audio(audio))\r\n\r\n    const startReminder = () => {\r\n        if (initialReminder === false) {\r\n            userError(\"Please wait...\")\r\n            return\r\n        }\r\n        let lastTime = time\r\n        if (name === \"\") {\r\n            userError(\"Please complete with the reminder name.\")\r\n            return\r\n        } else if (time === \"\") {\r\n            userError(\"Please complete with the reminder time.\")\r\n            return\r\n        } else if (name.length > 500) {\r\n            userError(\"The reminder cannot contain more than 500 characters!\")\r\n            return\r\n        } else if (time > 3600) {\r\n            userError(\"You can put a reminder of maximum 3600 seconds.\")\r\n            return\r\n        }\r\n        buttonDisabled(true)\r\n        userError(\"\")\r\n        function reminderFunction() {\r\n            if (lastTime !== 0) {\r\n                reminderName(`Start reminder! Name: ${name}, Seconds: ${lastTime}`)\r\n                lastTime--\r\n            } else {\r\n                reminderName(`The reminder is over. (name: ${name})!`)\r\n                clearInterval(refreshIntervalId)\r\n                sound.play()\r\n            }\r\n            setReminder(false)\r\n        }\r\n        reminderFunction()\r\n        const refreshIntervalId = setInterval(() => {\r\n            reminderFunction()\r\n        }, 1000)\r\n    }\r\n    const enableButton = () => {\r\n        buttonDisabled(false)\r\n        reminderName(\"\")\r\n        userError(\"You can set a new reminder right now!\")\r\n        setReminder(true)\r\n        sound.pause()\r\n    }\r\n    return (\r\n        <div>\r\n            <h2>Set a Reminder!!</h2>\r\n            <div className=\"set-reminder\">\r\n                <div className=\"inputs\">\r\n                    <span><input type=\"text\" placeholder=\"Reminder name here!\" width=\"500\" className=\"reminder\" onInput={e => setName(e.target.value)} value={name} /></span>\r\n                    <span><input type=\"number\" placeholder=\"Enter time in seconds\" width=\"500\" className=\"time\" onInput={e => setTime(e.target.value)} value={time} /></span>\r\n                </div>\r\n                <p className=\"error\">{error}</p>\r\n                <button className=\"submit-button\" type=\"button\" onClick={() => startReminder()} disabled={btn}>Start Reminder</button>\r\n                <button className=\"submit-button\" type=\"button\" onClick={() => enableButton()}>Clear all!</button>\r\n                <div className=\"div-reminder\">\r\n                    <p className=\"reminder-info\">{reminder}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\nimport \"./style.scss\"\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById(\"root\")\r\n)"],"sourceRoot":""}